---
- name: "Configure Docker server(s)"
  hosts: "all"
  become: yes
  become_method: sudo

  vars:
    pip_install_packages:
      - name: docker
    docker_users: ["{{ ansible_user }}"]
    avahi__alias_enabled: True

  roles:
    - geerlingguy.pip
    - geerlingguy.docker
    - role: debops.avahi
      tags: [ 'role::avahi' ]

  tasks:
  - name: add CNAME avahi aliases
    # Can't use blockinfile, no comments in avahi aliases
    lineinfile:
      path: /etc/avahi/aliases
      line: '{{ item }}'
    with_items:
      - 'jenkins.local'
      - 'nexus.local'
      - 'nexus3.local'
      - 'sonar.local'
      - 'logs.local'

  - name: add NGINX proxy container
    docker_container:
      name: aswf_nginx
      image: jwilder/nginx-proxy
      published_ports:
        - 80:80
      restart_policy: unless-stopped
      volumes: /var/run/docker.sock:/tmp/docker.sock:ro

  - name: create directory for Jenkins container build
    file:
      path: jenkins
      state: directory
      mode: 0755

  - name: copy Dockerfile for Jenkins container
    copy:
      src: ../jenkins/Dockerfile
      dest: jenkins/Dockerfile

  - name: copy list of Jenkins plugins
    copy:
      src: ../jenkins/plugins.txt
      dest: jenkins/plugins.txt

  - name: copy Jenkins executor config
    copy:
      src: ../jenkins/executors.groovy
      dest: jenkins/executors.groovy

  - name: build Jenkins image
    docker_image:
      path: jenkins
      name: aswf_jenkins

  - name: add Jenkins container
    docker_container:
      name: aswf_jenkins
      image: aswf_jenkins
      exposed_ports:
        - 8080
        - 50000
      restart_policy: unless-stopped
      volumes: jenkins_home:/var/jenkins_home
      env:
        VIRTUAL_HOST=jenkins.local
        VIRTUAL_PORT=8080
        JAVA_OPTS=-Djenkins.install.runSetupWizard=false

  - name: add Nexus2 container
    docker_container:
     name: aswf_nexus
     image: sonatype/nexus
     exposed_ports:
       - 8081
     restart_policy: unless-stopped
     env:
       VIRTUAL_HOST=nexus.local
       VIRTUAL_PORT=8081

  - name: add Nexus3 container
    docker_container:
      name: aswf_nexus3
      image: sonatype/nexus3
      exposed_ports:
        - 8081
      restart_policy: unless-stopped
      env:
        VIRTUAL_HOST=nexus3.local
        VIRTUAL_PORT=8081

  - name: add SonarQube container
    docker_container:
        name: aswf_sonar
        image: sonarqube
        exposed_ports:
          - 9000
          - 9092
        restart_policy: unless-stopped
        env:
          VIRTUAL_HOST=sonar.local
          VIRTUAL_PORT=9000
          SONARQUBE_JDBC_USERNAME=sonar
          SONARQUBE_JDBC_PASSWORD=sonar
          SONARQUBE_JDBC_URL=jdbc:postgresql://localhost/sonar

